{"ast":null,"code":"var _jsxFileName = \"/home/muhammadumarfe/Documents/GitHub/MAPAPP/src/OverlappingMap.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TileLayer, Rectangle, LayersControl, LayerGroup, useMap } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OverlappingMap = () => {\n  _s();\n\n  const map = useMap();\n  const [fillColorMap, setFillColorMap] = useState('green');\n  const [outerColorMap, setOuterColorMap] = useState(-1);\n  const [innerColorMap, setInnerColorMap] = useState('#aa0021');\n  const center = [60.22352998843195, 24.94705001539827];\n  const rectangle = [[51.49, -0.00], [51.5, -0.06]];\n  const rectangle1 = [[[60, 70], [80, 90]], [[60.22352998843195, 24.94705001539827], [60.13500641212243, 24.66432372755647]], [[60.25583006469535, 25.052094025408156], [60.16739368515819, 24.76936773756636]], [[60.259833395882744, 25.196786999980585], [60.17140782564092, 24.914060712138788]], [[60.20826373282, 25.138085935563282], [60.119698953798306, 24.85535964772149]], [[60.23853345668488, 25.078355027910614], [60.15005037998829, 24.795628740068818]], [[60.212448009374754, 25.00376734695335], [60.16820109990049, 24.862404203032455]], [[60.199309900110826, 24.97733470391163], [60.155045270947255, 24.835971559990732]], [[60.18019052880191, 24.99853231050678], [60.1359001170413, 24.85716916658588]], [[60.21163769386681, 25.0439312331336], [60.16738969143272, 24.9025680892127]], [[60.190268017659626, 24.972029980829788], [60.17920440537793, 24.936689194849563]], [[60.1822331840832, 24.96711677039429], [60.17116686405875, 24.931775984414067]], [[60.18000271563173, 24.951712031998234], [60.168935643976944, 24.91637124601801]], [[60.18423940905332, 24.95136875091975], [60.17317376510724, 24.916027964939527]], [[60.189158410001994, 24.96677348931581], [60.178094423769004, 24.931432703335584]], [[60.18471960429552, 24.95630341642265], [60.17365412217261, 24.920962630442425]], [[60.17386547757727, 24.972094346031998], [60.162796337863156, 24.936753560051773]], [[60.170494436844166, 24.96379079865687], [60.16495976522987, 24.946120405666758]]];\n\n  const distance = (lat1, lon1, lat2, lon2) => {\n    var p = 0.017453292519943295; // Math.PI / 180\n\n    var c = Math.cos;\n    var a = 0.5 - c((lat2 - lat1) * p) / 2 + c(lat1 * p) * c(lat2 * p) * (1 - c((lon2 - lon1) * p)) / 2;\n    return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\n  }; // console.log(rectangle1)\n\n\n  let rec2 = [];\n  rectangle1.forEach(a => {\n    const aa = distance(a[0][0], a[0][1], a[1][0], a[1][1]);\n    rec2.push([...a, {\n      'Cord': aa\n    }]);\n  });\n\n  const compare = (a, b) => {\n    if (a[2].Cord < b[2].Cord) {\n      return -1;\n    }\n\n    if (a[2].Cord > b[2].Cord) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  const sortedData = rec2.sort(compare);\n\n  const RgbaColor = () => {\n    let color = \"#\";\n\n    for (let i = 0; i < 3; i++) {\n      color += (\"0\" + Math.floor(Math.random() * Math.pow(16, 2) / 2).toString(16)).slice(-2);\n    }\n\n    return color;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LayersControl, {\n      position: \"topright\",\n      children: [/*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n        checked: true,\n        name: \"OpenStreetMap.Mapnik\",\n        children: /*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n        name: \"OpenStreetMap.BlackAndWhite\",\n        children: /*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n        checked: true,\n        name: \"Layer group with circles\",\n        children: /*#__PURE__*/_jsxDEV(LayerGroup, {\n          children: sortedData.map((item, index) => /*#__PURE__*/_jsxDEV(Rectangle, {\n            bounds: item,\n            eventHandlers: {\n              click: e => {\n                //debugger\n                ///console.log('zoom coordinatessssssssssss', e.target._latlngs)\n                map.setView( //e.target._latlngs[0][0],\n                e.latlang, 17);\n              },\n              mouseover: e => {\n                setOuterColorMap(index);\n              },\n              mouseout: () => {\n                setOuterColorMap(-1);\n              }\n            },\n            pathOptions: {\n              color: 'rgba(74,150,240,0)',\n              stroke: false,\n              fillColor: index == outerColorMap ? '#1E5162' : RgbaColor()\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(OverlappingMap, \"DViO2wNM9ejTaZVB3DfAmmUoMLc=\", false, function () {\n  return [useMap];\n});\n\n_c = OverlappingMap;\nexport default OverlappingMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"OverlappingMap\");","map":{"version":3,"sources":["/home/muhammadumarfe/Documents/GitHub/MAPAPP/src/OverlappingMap.tsx"],"names":["React","useState","TileLayer","Rectangle","LayersControl","LayerGroup","useMap","OverlappingMap","map","fillColorMap","setFillColorMap","outerColorMap","setOuterColorMap","innerColorMap","setInnerColorMap","center","rectangle","rectangle1","distance","lat1","lon1","lat2","lon2","p","c","Math","cos","a","asin","sqrt","rec2","forEach","aa","push","compare","b","Cord","sortedData","sort","RgbaColor","color","i","floor","random","pow","toString","slice","item","index","click","e","setView","latlang","mouseover","mouseout","stroke","fillColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAAuBC,SAAvB,EAA0DC,SAA1D,EAAqEC,aAArE,EAAoFC,UAApF,EAAsHC,MAAtH,QAAwK,eAAxK;;;;AAMA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAMC,GAAG,GAAGF,MAAM,EAAlB;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,OAAD,CAAhD;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,CAAC,CAAF,CAAlD;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,SAAD,CAAlD;AAEA,QAAMc,MAAmB,GAAG,CAAC,iBAAD,EAAoB,iBAApB,CAA5B;AACA,QAAMC,SAAwB,GAAG,CAC7B,CAAC,KAAD,EAAQ,CAAC,IAAT,CAD6B,EAE7B,CAAC,IAAD,EAAO,CAAC,IAAR,CAF6B,CAAjC;AAKA,QAAMC,UAAgC,GAAG,CACrC,CACI,CAAC,EAAD,EAAK,EAAL,CADJ,EAEI,CAAC,EAAD,EAAK,EAAL,CAFJ,CADqC,EAKrC,CACI,CAAC,iBAAD,EAAoB,iBAApB,CADJ,EAEI,CAAC,iBAAD,EAAoB,iBAApB,CAFJ,CALqC,EASrC,CACI,CAAC,iBAAD,EAAoB,kBAApB,CADJ,EAEI,CAAC,iBAAD,EAAoB,iBAApB,CAFJ,CATqC,EAarC,CACI,CAAC,kBAAD,EAAqB,kBAArB,CADJ,EAEI,CAAC,iBAAD,EAAoB,kBAApB,CAFJ,CAbqC,EAiBrC,CACI,CAAC,cAAD,EAAiB,kBAAjB,CADJ,EAEI,CAAC,kBAAD,EAAqB,iBAArB,CAFJ,CAjBqC,EAqBrC,CACI,CAAC,iBAAD,EAAoB,kBAApB,CADJ,EAEI,CAAC,iBAAD,EAAoB,kBAApB,CAFJ,CArBqC,EAyBrC,CACI,CAAC,kBAAD,EAAqB,iBAArB,CADJ,EAEI,CAAC,iBAAD,EAAoB,kBAApB,CAFJ,CAzBqC,EA6BrC,CACI,CAAC,kBAAD,EAAqB,iBAArB,CADJ,EAEI,CAAC,kBAAD,EAAqB,kBAArB,CAFJ,CA7BqC,EAiCrC,CACI,CAAC,iBAAD,EAAoB,iBAApB,CADJ,EAEI,CAAC,gBAAD,EAAmB,iBAAnB,CAFJ,CAjCqC,EAqCrC,CACI,CAAC,iBAAD,EAAoB,gBAApB,CADJ,EAEI,CAAC,iBAAD,EAAoB,gBAApB,CAFJ,CArCqC,EA0CrC,CACI,CAAC,kBAAD,EAAqB,kBAArB,CADJ,EAEI,CAAC,iBAAD,EAAoB,kBAApB,CAFJ,CA1CqC,EA8CrC,CACI,CAAC,gBAAD,EAAmB,iBAAnB,CADJ,EAEI,CAAC,iBAAD,EAAoB,kBAApB,CAFJ,CA9CqC,EAkDrC,CACI,CAAC,iBAAD,EAAoB,kBAApB,CADJ,EAEI,CAAC,kBAAD,EAAqB,iBAArB,CAFJ,CAlDqC,EAsDrC,CACI,CAAC,iBAAD,EAAoB,iBAApB,CADJ,EAEI,CAAC,iBAAD,EAAoB,kBAApB,CAFJ,CAtDqC,EA0DrC,CACI,CAAC,kBAAD,EAAqB,iBAArB,CADJ,EAEI,CAAC,kBAAD,EAAqB,kBAArB,CAFJ,CA1DqC,EA8DrC,CACI,CAAC,iBAAD,EAAoB,iBAApB,CADJ,EAEI,CAAC,iBAAD,EAAoB,kBAApB,CAFJ,CA9DqC,EAkErC,CACI,CAAC,iBAAD,EAAoB,kBAApB,CADJ,EAEI,CAAC,kBAAD,EAAqB,kBAArB,CAFJ,CAlEqC,EAsErC,CACI,CAAC,kBAAD,EAAqB,iBAArB,CADJ,EAEI,CAAC,iBAAD,EAAoB,kBAApB,CAFJ,CAtEqC,CAAzC;;AA2EA,QAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,KAA4B;AACzC,QAAIC,CAAC,GAAG,oBAAR,CADyC,CACR;;AACjC,QAAIC,CAAC,GAAGC,IAAI,CAACC,GAAb;AACA,QAAIC,CAAC,GAAG,MAAMH,CAAC,CAAC,CAACH,IAAI,GAAGF,IAAR,IAAgBI,CAAjB,CAAD,GAAuB,CAA7B,GACJC,CAAC,CAACL,IAAI,GAAGI,CAAR,CAAD,GAAcC,CAAC,CAACH,IAAI,GAAGE,CAAR,CAAf,IACC,IAAIC,CAAC,CAAC,CAACF,IAAI,GAAGF,IAAR,IAAgBG,CAAjB,CADN,IAC6B,CAFjC;AAIA,WAAO,QAAQE,IAAI,CAACG,IAAL,CAAUH,IAAI,CAACI,IAAL,CAAUF,CAAV,CAAV,CAAf,CAPyC,CAOD;AAC3C,GARD,CAxFyB,CAiGzB;;;AAEA,MAAIG,IAAI,GAAG,EAAX;AACAb,EAAAA,UAAU,CAACc,OAAX,CAAmBJ,CAAC,IAAI;AACpB,UAAMK,EAAE,GAAGd,QAAQ,CAACS,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAD,EAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAV,EAAmBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAnB,EAA4BA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAA5B,CAAnB;AACAG,IAAAA,IAAI,CAACG,IAAL,CAAU,CAAC,GAAGN,CAAJ,EAAO;AAAE,cAAQK;AAAV,KAAP,CAAV;AACH,GAHD;;AAKA,QAAME,OAAO,GAAG,CAACP,CAAD,EAAIQ,CAAJ,KAAU;AACtB,QAAIR,CAAC,CAAC,CAAD,CAAD,CAAKS,IAAL,GAAYD,CAAC,CAAC,CAAD,CAAD,CAAKC,IAArB,EAA2B;AACvB,aAAO,CAAC,CAAR;AACH;;AACD,QAAIT,CAAC,CAAC,CAAD,CAAD,CAAKS,IAAL,GAAYD,CAAC,CAAC,CAAD,CAAD,CAAKC,IAArB,EAA2B;AACvB,aAAO,CAAP;AACH;;AACD,WAAO,CAAP;AACH,GARD;;AAUA,QAAMC,UAAU,GAAGP,IAAI,CAACQ,IAAL,CAAUJ,OAAV,CAAnB;;AAGA,QAAMK,SAAS,GAAG,MAAM;AACpB,QAAIC,KAAK,GAAG,GAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,MAAAA,KAAK,IAAI,CAAC,MAAMf,IAAI,CAACiB,KAAL,CAAWjB,IAAI,CAACkB,MAAL,KAAgBlB,IAAI,CAACmB,GAAL,CAAS,EAAT,EAAa,CAAb,CAAhB,GAAkC,CAA7C,EAAgDC,QAAhD,CAAyD,EAAzD,CAAP,EAAqEC,KAArE,CAA2E,CAAC,CAA5E,CAAT;AACH;;AACD,WAAON,KAAP;AACH,GAND;;AAQA,sBACI;AAAA,2BACA,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAC,UAAxB;AAAA,8BACI,QAAC,aAAD,CAAe,SAAf;AAAyB,QAAA,OAAO,MAAhC;AAAiC,QAAA,IAAI,EAAC,sBAAtC;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,WAAW,EAAC,yFADhB;AAEI,UAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,aAAD,CAAe,SAAf;AAAyB,QAAA,IAAI,EAAC,6BAA9B;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,WAAW,EAAC,yFADhB;AAEI,UAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAcI,QAAC,aAAD,CAAe,OAAf;AAAuB,QAAA,OAAO,MAA9B;AAA+B,QAAA,IAAI,EAAC,0BAApC;AAAA,+BAEI,QAAC,UAAD;AAAA,oBACKH,UAAU,CAAC7B,GAAX,CAAe,CAACuC,IAAD,EAAOC,KAAP,kBACZ,QAAC,SAAD;AACI,YAAA,MAAM,EAAED,IADZ;AAEI,YAAA,aAAa,EAAE;AACXE,cAAAA,KAAK,EAAGC,CAAD,IAAO;AACV;AACA;AAEA1C,gBAAAA,GAAG,CAAC2C,OAAJ,EACI;AACAD,gBAAAA,CAAC,CAACE,OAFN,EAGI,EAHJ;AAKH,eAVU;AAWXC,cAAAA,SAAS,EAAGH,CAAD,IAAO;AACdtC,gBAAAA,gBAAgB,CAACoC,KAAD,CAAhB;AAEH,eAdU;AAeXM,cAAAA,QAAQ,EAAE,MAAM;AACZ1C,gBAAAA,gBAAgB,CAAC,CAAC,CAAF,CAAhB;AACH;AAjBU,aAFnB;AAqBI,YAAA,WAAW,EAAE;AAAE4B,cAAAA,KAAK,EAAE,oBAAT;AAA+Be,cAAAA,MAAM,EAAE,KAAvC;AAA8CC,cAAAA,SAAS,EAAER,KAAK,IAAIrC,aAAT,GAAyB,SAAzB,GAAqC4B,SAAS;AAAvG;AArBjB;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAiDH,CA/KD;;GAAMhC,c;UAEUD,M;;;KAFVC,c;AAgLN,eAAeA,cAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { MapContainer, TileLayer, Marker, Popup, Polygon, Rectangle, LayersControl, LayerGroup, FeatureGroup, Circle, useMap, useMapEvent, useMapEvents, Tooltip } from 'react-leaflet';\nimport { LatLngBounds, LatLngTuple, } from 'leaflet';\nimport { useMapElement } from 'react-leaflet/types/MapContainer';\n\n\n\nconst OverlappingMap = () => {\n\n    const map = useMap();\n    const [fillColorMap, setFillColorMap] = useState('green')\n    const [outerColorMap, setOuterColorMap] = useState(-1)\n    const [innerColorMap, setInnerColorMap] = useState('#aa0021')\n\n    const center: LatLngTuple = [60.22352998843195, 24.94705001539827]\n    const rectangle: LatLngTuple[] = [\n        [51.49, -0.00],\n        [51.5, -0.06],\n    ]\n\n    const rectangle1: Array<LatLngTuple[]> = [\n        [\n            [60, 70],\n            [80, 90],\n        ],\n        [\n            [60.22352998843195, 24.94705001539827],\n            [60.13500641212243, 24.66432372755647],\n        ],\n        [\n            [60.25583006469535, 25.052094025408156],\n            [60.16739368515819, 24.76936773756636]\n        ],\n        [\n            [60.259833395882744, 25.196786999980585],\n            [60.17140782564092, 24.914060712138788]\n        ],\n        [\n            [60.20826373282, 25.138085935563282],\n            [60.119698953798306, 24.85535964772149]\n        ],\n        [\n            [60.23853345668488, 25.078355027910614],\n            [60.15005037998829, 24.795628740068818],\n        ],\n        [\n            [60.212448009374754, 25.00376734695335],\n            [60.16820109990049, 24.862404203032455],\n        ],\n        [\n            [60.199309900110826, 24.97733470391163],\n            [60.155045270947255, 24.835971559990732]\n        ],\n        [\n            [60.18019052880191, 24.99853231050678],\n            [60.1359001170413, 24.85716916658588]\n        ],\n        [\n            [60.21163769386681, 25.0439312331336],\n            [60.16738969143272, 24.9025680892127],\n\n        ],\n        [\n            [60.190268017659626, 24.972029980829788],\n            [60.17920440537793, 24.936689194849563],\n        ],\n        [\n            [60.1822331840832, 24.96711677039429],\n            [60.17116686405875, 24.931775984414067]\n        ],\n        [\n            [60.18000271563173, 24.951712031998234],\n            [60.168935643976944, 24.91637124601801]\n        ],\n        [\n            [60.18423940905332, 24.95136875091975],\n            [60.17317376510724, 24.916027964939527]\n        ],\n        [\n            [60.189158410001994, 24.96677348931581],\n            [60.178094423769004, 24.931432703335584],\n        ],\n        [\n            [60.18471960429552, 24.95630341642265],\n            [60.17365412217261, 24.920962630442425]\n        ],\n        [\n            [60.17386547757727, 24.972094346031998],\n            [60.162796337863156, 24.936753560051773],\n        ],\n        [\n            [60.170494436844166, 24.96379079865687],\n            [60.16495976522987, 24.946120405666758]\n        ]\n    ]\n    const distance = (lat1, lon1, lat2, lon2) => {\n        var p = 0.017453292519943295;    // Math.PI / 180\n        var c = Math.cos;\n        var a = 0.5 - c((lat2 - lat1) * p) / 2 +\n            c(lat1 * p) * c(lat2 * p) *\n            (1 - c((lon2 - lon1) * p)) / 2;\n\n        return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\n    }\n    // console.log(rectangle1)\n\n    let rec2 = [];\n    rectangle1.forEach(a => {\n        const aa = distance(a[0][0], a[0][1], a[1][0], a[1][1])\n        rec2.push([...a, { 'Cord': aa }])\n    })\n\n    const compare = (a, b) => {\n        if (a[2].Cord < b[2].Cord) {\n            return -1;\n        }\n        if (a[2].Cord > b[2].Cord) {\n            return 1;\n        }\n        return 0;\n    }\n\n    const sortedData = rec2.sort(compare);\n\n\n    const RgbaColor = () => {\n        let color = \"#\";\n        for (let i = 0; i < 3; i++) {\n            color += (\"0\" + Math.floor(Math.random() * Math.pow(16, 2) / 2).toString(16)).slice(-2)\n        }\n        return color\n    }\n\n    return (\n        <>\n        <LayersControl position=\"topright\">\n            <LayersControl.BaseLayer checked name=\"OpenStreetMap.Mapnik\">\n                <TileLayer\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n            </LayersControl.BaseLayer>\n            <LayersControl.BaseLayer name=\"OpenStreetMap.BlackAndWhite\">\n                <TileLayer\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n                />\n            </LayersControl.BaseLayer>\n\n            <LayersControl.Overlay checked name=\"Layer group with circles\">\n\n                <LayerGroup>\n                    {sortedData.map((item, index) =>\n                        <Rectangle\n                            bounds={item}\n                            eventHandlers={{\n                                click: (e) => {\n                                    //debugger\n                                    ///console.log('zoom coordinatessssssssssss', e.target._latlngs)\n\n                                    map.setView(\n                                        //e.target._latlngs[0][0],\n                                        e.latlang,\n                                        17\n                                    );\n                                },\n                                mouseover: (e) => {\n                                    setOuterColorMap(index)\n\n                                },\n                                mouseout: () => {\n                                    setOuterColorMap(-1)\n                                },\n                            }}\n                            pathOptions={{ color: 'rgba(74,150,240,0)', stroke: false, fillColor: index == outerColorMap ? '#1E5162' : RgbaColor() }} />\n                    )}\n                </LayerGroup>\n            </LayersControl.Overlay>\n\n        </LayersControl>\n        </>\n    )\n}\nexport default OverlappingMap"]},"metadata":{},"sourceType":"module"}